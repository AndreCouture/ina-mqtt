name: Build INA Sensor Binaries

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - armhf
          - arm64

    name: Build for ${{ matrix.arch }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install cross-compilers
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-arm-linux-gnueabihf \
            gcc-aarch64-linux-gnu \
            libpaho-mqtt1.3 \
            libpaho-mqtt-dev \
            libi2c-dev \
            build-essential

      - name: Build Paho MQTT C for ${{ matrix.arch }}
        run: |
          git clone https://github.com/eclipse/paho.mqtt.c.git
          cd paho.mqtt.c
          cmake -Bbuild -H. \
            -DPAHO_WITH_SSL=OFF \
            -DPAHO_BUILD_STATIC=TRUE \
            -DCMAKE_C_COMPILER=${{ matrix.arch == 'armhf' && 'arm-linux-gnueabihf-gcc' || 'aarch64-linux-gnu-gcc' }} \
            -DCMAKE_INSTALL_PREFIX=../paho-install/${{ matrix.arch }}
          cmake --build build --target install
          
      - name: Build binary
        run: |
          mkdir -p build/${{ matrix.arch }}
          if [ "${{ matrix.arch }}" = "armhf" ]; then
            CC=arm-linux-gnueabihf-gcc
            BIN=ina_mqtt-armhf
          elif [ "${{ matrix.arch }}" = "arm64" ]; then
            CC=aarch64-linux-gnu-gcc
            BIN=ina_mqtt-arm64
          fi
          $CC -O2 -Wall -o build/${{ matrix.arch }}/$BIN ina219_mqtt.c -lpaho-mqtt3c

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ina_mqtt-${{ matrix.arch }}
          path: build/${{ matrix.arch }}
