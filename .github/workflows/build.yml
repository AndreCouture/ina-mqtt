name: Build INA Sensor Binaries

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - armhf
          - arm64

    name: Build for ${{ matrix.arch }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install cross-compilers
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc-arm-linux-gnueabihf \
            gcc-aarch64-linux-gnu \
            cmake \
            libi2c-dev \
            build-essential

      - name: Build Paho MQTT C for ${{ matrix.arch }}
        run: |
          git clone https://github.com/eclipse/paho.mqtt.c.git
          mkdir -p paho-build
          cd paho.mqtt.c

          # Choose the correct compiler
          if [ "${{ matrix.arch }}" = "armhf" ]; then
            export CC=arm-linux-gnueabihf-gcc
            export INSTALL_DIR=$GITHUB_WORKSPACE/paho-install/armhf
          else
            export CC=aarch64-linux-gnu-gcc
            export INSTALL_DIR=$GITHUB_WORKSPACE/paho-install/arm64
          fi

          cmake -Bbuild -H. \
            -DPAHO_WITH_SSL=OFF \
            -DPAHO_BUILD_STATIC=TRUE \
            -DPAHO_BUILD_DOCUMENTATION=FALSE \
            -DCMAKE_C_COMPILER=$CC \
            -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR

          cmake --build build --target install

      - name: Build binary
        run: |
          mkdir -p build/${{ matrix.arch }}
          if [ "${{ matrix.arch }}" = "armhf" ]; then
            export CC=arm-linux-gnueabihf-gcc
            export INSTALL_DIR=$GITHUB_WORKSPACE/paho-install/armhf
            export BIN=ina_mqtt-armhf
          else
            export CC=aarch64-linux-gnu-gcc
            export INSTALL_DIR=$GITHUB_WORKSPACE/paho-install/arm64
            export BIN=ina_mqtt-arm64
          fi

          $CC -O2 -Wall -o build/${{ matrix.arch }}/$BIN ina219_mqtt.c \
            -I$INSTALL_DIR/include \
            -L$INSTALL_DIR/lib \
            -lpaho-mqtt3c

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ina_mqtt-${{ matrix.arch }}
          path: build/${{ matrix.arch }}

      - name: Push to binary release repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git clone https://github.com/AndreCouture/ina-mqtt-binaries.git
          cd ina-mqtt-binaries

          mkdir -p ${{ matrix.arch }}
          cp ../build/${{ matrix.arch }}/ina_mqtt-${{ matrix.arch }} ${{ matrix.arch }}/ina_mqtt

          git add ${{ matrix.arch }}/ina_mqtt
          git commit -m "Update binary for ${{ matrix.arch }} on $(date -u +'%Y-%m-%d %H:%M:%S')"
          git push
          
